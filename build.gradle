plugins {
    id 'java'
}

group = 'com.nitkanikita'
version '1.0-SNAPSHOT'

subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
        maven {
            url 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
        }
        maven {
            url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

            // As of Gradle 5.1, you can limit this to only those
            // dependencies you expect from it
            content {
                includeGroup 'org.bukkit'
                includeGroup 'org.spigotmc'
            }
        }
        maven {
            name 'sonatype'
            url 'https://oss.sonatype.org/content/groups/public/'
        }
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    }

    dependencies {

        compileOnly 'org.projectlombok:lombok:1.18.22'
        annotationProcessor 'org.projectlombok:lombok:1.18.22'

        testCompileOnly 'org.projectlombok:lombok:1.18.22'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    }
}

test {
    useJUnitPlatform()
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

var path = file("D:\\CODING\\Servers\\paper1.18.1\\plugins")

jar{
    destinationDir = path;
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
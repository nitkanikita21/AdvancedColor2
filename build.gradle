import net.minecrell.pluginyml.bukkit.BukkitPluginDescription
plugins {
    id 'java'
    id 'maven-publish'
    id("net.minecrell.plugin-yml.bukkit") version "0.5.2"
}

group = 'com.nitkanikita.advancedcolor2'
version '1.0-SNAPSHOT'


repositories {
    mavenCentral()
    maven { url = 'https://jitpack.io' }
    maven {
        url 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name 'sonatype'
        url 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    maven { url = uri("https://repo.papermc.io/repository/maven-public/") }
}

    dependencies {
        compileOnly "io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT"

        compileOnly 'org.projectlombok:lombok:1.18.22'
        annotationProcessor 'org.projectlombok:lombok:1.18.22'

        testCompileOnly 'org.projectlombok:lombok:1.18.22'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    }

test {
    useJUnitPlatform()
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

bukkit {
    load = BukkitPluginDescription.PluginLoadOrder.STARTUP
    name = 'AdvancedColor2-Libary'
    main = 'com.nitkanikita.advancedcolor2.api.platforms.SpigotPlatform'
    apiVersion = '1.16'
    prefix = 'AC2 Libary'

    authors = ['NitkaNikita']
}